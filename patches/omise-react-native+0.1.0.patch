diff --git a/node_modules/omise-react-native/index.js b/node_modules/omise-react-native/index.js
index f6ce9ca..6af4270 100644
--- a/node_modules/omise-react-native/index.js
+++ b/node_modules/omise-react-native/index.js
@@ -3,19 +3,22 @@ const pkgConfig = require("./package.json");
 const vaultEndpoint = "https://vault.omise.co/";
 const apiEndpoint = "https://api.omise.co/";
 
+let _pub;
 let _key;
 let _apiVersion;
 class ReactNativeOmise {
     constructor() {
         this.createSource = this.createSource.bind(this);
         this.createToken = this.createToken.bind(this);
+        this.createCharge = this.createCharge.bind(this);
         this.createCustomer = this.createCustomer.bind(this);
         this.retrieveCustomer = this.retrieveCustomer.bind(this);
         this.updateCustomer = this.updateCustomer.bind(this);
         this.destroyCustomerCard = this.destroyCustomerCard.bind(this);
     }
 
-    config(key, apiVersion = "2015-11-17") {
+    config(pub, key, apiVersion = "2015-11-17") {
+        _pub = pub
         _key = key
         _apiVersion = apiVersion;
     }
@@ -36,7 +39,7 @@ class ReactNativeOmise {
 
     createToken(data) {
         const tokenEndpoint = vaultEndpoint + "tokens";
-        const headers = this.getHeaders(_key)
+        const headers = this.getHeaders(_pub)
         return new Promise((resolve, reject) => {
             return fetch(tokenEndpoint, {
                 method: 'POST',
@@ -54,9 +57,30 @@ class ReactNativeOmise {
         });
     }
 
+    createCharge(data) {
+        const chargeEndpoint = `${apiEndpoint}charges`
+        const headers = this.getHeaders(_key)
+        return new Promise((resolve, reject) => {
+            return fetch(chargeEndpoint, {
+                method: 'POST',
+                cache: 'no-cache',
+                headers: headers,
+                body: JSON.stringify(data)
+            }).then((response) => {
+                if (response.ok && response.status === 200) {
+                    resolve(response.json());
+                } else {
+                    console.log("response not ok", response);
+                    reject(response.json());
+                }
+            }).catch((error) => resolve(error));
+        });
+    }
+    
+
     createSource(data) {
         const sourceEndpoint = `${apiEndpoint}sources`
-        const headers = this.getHeaders(_key)
+        const headers = this.getHeaders(_pub)
         return new Promise((resolve, reject) => {
             return fetch(sourceEndpoint, {
                 method: 'POST',
@@ -159,6 +183,7 @@ const reactNativeOmise = new ReactNativeOmise();
 module.exports = {
     config: reactNativeOmise.config,
     createToken: reactNativeOmise.createToken,
+    createCharge: reactNativeOmise.createCharge,
     createSource: reactNativeOmise.createSource,
     createCustomer: reactNativeOmise.createCustomer,
     retrieveCustomer: reactNativeOmise.retrieveCustomer,
